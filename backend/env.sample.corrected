# ============================================
# TERRACRED BACKEND ENVIRONMENT CONFIGURATION
# ============================================

# ============================================
# SERVER CONFIGURATION
# ============================================
PORT=3001

# ============================================
# HEDERA NETWORK CONFIGURATION
# ============================================
# Get your testnet account from: https://portal.hedera.com
# Format: 0.0.12345 (example)
HEDERA_ACCOUNT_ID=0.0.xxxxx

# Your account private key in DER format
# Format: 302e020100300506032b657004220420... (66 chars after the prefix)
HEDERA_PRIVATE_KEY=302e020100300506032b657004220420xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Hedera JSON-RPC endpoint for smart contract interactions
HEDERA_RPC_URL=https://testnet.hashio.io/api

# ============================================
# HCS TOPIC CONFIGURATION
# ============================================
# Leave empty - will be auto-created on first run
# After creation, the topic ID will be logged to console
# You can then add it here for subsequent runs
HCS_TOPIC_ID=

# ============================================
# TOKEN CONFIGURATION
# ============================================
# Run: npm run setup-tokens
# This will create heNGN token and output the IDs
# Then paste them here

# heNGN Token ID from HTS (format: 0.0.12345)
HENGN_TOKEN_ID=

# heNGN Token EVM address (format: 0x...)
# This is derived from the token ID for use with smart contracts
# Convert using: https://docs.hedera.com/hedera/core-concepts/accounts/account-properties#account-id-evm-address-and-account-alias
HENGN_TOKEN_ADDRESS=

# ============================================
# SMART CONTRACT ADDRESSES
# ============================================
# ⚠️ CRITICAL: You MUST deploy these contracts first!
# Deploy using: cd contracts && forge script script/Deploy.s.sol --broadcast
# Then paste the deployed addresses here

# LendingPool contract address (EVM format: 0x...)
LENDING_POOL_ADDRESS=0x0000000000000000000000000000000000000000

# PriceOracle contract address (EVM format: 0x...)
ORACLE_ADDRESS=0x0000000000000000000000000000000000000000

# ============================================
# SERVICE PRIVATE KEYS
# ============================================
# ⚠️ SECURITY NOTE: For production, use separate keys for each service
# For MVP/testing, you can use the same key as HEDERA_PRIVATE_KEY

# Oracle service key (updates property prices)
# Format: 302e020100300506032b657004220420... (same format as main key)
ORACLE_PRIVATE_KEY=302e020100300506032b657004220420xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Liquidation service key (executes liquidations)
# Format: 302e020100300506032b657004220420... (same format as main key)
LIQUIDATION_PRIVATE_KEY=302e020100300506032b657004220420xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# ============================================
# OPTIONAL: DATABASE (Production Only)
# ============================================
# Currently using in-memory store (store.js) for MVP
# For production, uncomment and configure PostgreSQL:
# DATABASE_URL=postgresql://user:password@localhost:5432/terracred
# DATABASE_SSL=true

# ============================================
# OPTIONAL: FILE STORAGE (Production Only)
# ============================================
# For storing property documents, deeds, appraisals
# Choose IPFS or AWS S3:

# IPFS Configuration
# IPFS_API_URL=https://ipfs.infura.io:5001
# IPFS_API_KEY=your_infura_project_id
# IPFS_API_SECRET=your_infura_secret

# AWS S3 Configuration
# AWS_S3_BUCKET=terracred-documents
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key

# ============================================
# OPTIONAL: EXTERNAL APIs (Production Only)
# ============================================
# For automated property valuation
# ZILLOW_API_KEY=your_zillow_api_key
# REDFIN_API_KEY=your_redfin_api_key

# For KYC verification
# PERSONA_API_KEY=your_persona_api_key
# VERIFF_API_KEY=your_veriff_api_key

# ============================================
# QUICK START GUIDE
# ============================================
# 1. Get Hedera testnet account: https://portal.hedera.com
# 2. Add HEDERA_ACCOUNT_ID and HEDERA_PRIVATE_KEY above
# 3. Deploy smart contracts (LendingPool, PriceOracle)
# 4. Add contract addresses above
# 5. Run: npm run setup-tokens
# 6. Add token IDs from console output
# 7. For MVP: Use same private key for all services
# 8. Run: npm run dev
# 9. Test: curl http://localhost:3001/health

# ============================================
# NOTES
# ============================================
# - Never commit this file to version control!
# - Keep .env.sample as a template without real credentials
# - Minimum HBAR balance needed: ~10 HBAR for testing
# - All Hedera accounts start with 0.0.xxxxx format
# - All EVM addresses start with 0x followed by 40 hex chars
